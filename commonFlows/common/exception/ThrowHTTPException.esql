/*$mqsi ThrowException.subflow_ESQL_VERSION = 1 MQSI$
v1 Samba Raju Golusula JULY 12, 2016 - Base version
V2 Samba Raju Golusula NOV 11, 2016 - Updated version
*/
BROKER SCHEMA common.exception

CREATE COMPUTE MODULE ThrowHTTPException
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyEntireMessage();
		SET Environment.Variables.isConsumable = TRUE;
		CALL throwHTTPException(Environment,InputRoot,InputExceptionList);
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
CREATE PROCEDURE throwHTTPException(IN Environment REFERENCE, IN InputRoot REFERENCE, IN InputExceptionList REFERENCE)
BEGIN
	CREATE FIELD Environment.Variables Type Name;
	DECLARE envRef REFERENCE TO Environment.Variables;
	SET envRef.exceptionCode = InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Code";
	-- checking HTTP Response header
	IF FIELDNAME(InputRoot.HTTPResponseHeader) IS NOT NULL THEN
		SET envRef.exceptionMessage = InputRoot.HTTPResponseHeader."X-Original-HTTP-Status-Line";
		SET envRef.HTTPResponseHeader = InputRoot.HTTPResponseHeader;		
		IF InputExceptionList IS NOT NULL THEN
			SET envRef.Exception = InputExceptionList;
			THROW USER EXCEPTION MESSAGE 2951 VALUES(envRef.exceptionCode, envRef.exceptionMessage, envRef.HTTPResponseHeader, envRef.Exception);
		ELSE
			SET Environment.Variables.isConsumable = TRUE;
		--	THROW USER EXCEPTION MESSAGE 2951 VALUES(envRef.exceptionCode, envRef.exceptionMessage, envRef.HTTPResponseHeader);
		END IF;
	ELSE
		DECLARE ptrException reference to InputExceptionList.*[1];
		WHILE lastmove(ptrException) DO
			IF ptrException.Number is not null THEN
				SET envRef.exceptionMessage = ptrException.Text;
			END IF;
			move ptrException lastchild;
		END WHILE;
		SET envRef.Exception = InputExceptionList;
		SET envRef.isConsumable = TRUE;
	--	THROW USER EXCEPTION MESSAGE 2951 VALUES(envRef.exceptionMessage, envRef.Exception);
	END IF;
END;